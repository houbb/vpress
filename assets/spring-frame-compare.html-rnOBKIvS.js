import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as o,o as e}from"./app-NomDibRt.js";const t="/vpress/images/spring/springcloud/4-1.jpg",n="/vpress/images/spring/springcloud/4-2.jpg",a="/vpress/images/spring/springcloud/4-3.jpg",g={};function s(l,r){return e(),i("div",null,r[0]||(r[0]=[o('<h1 id="讲一讲-spring、springmvc、springboot、springcloud-之间的关系" tabindex="-1"><a class="header-anchor" href="#讲一讲-spring、springmvc、springboot、springcloud-之间的关系"><span>讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p>大家好，我是老马~</p><p>搞后端开发的同学，对 Spring 家族一定不陌生。</p><p>Spring 全家桶了为了解决不同场景的问题，逐渐演化出多套生态环框，如： Spring、SpringMVC、SpringBoot、SpringCloud</p><p>它们之间的关系：</p><div align="left"><img src="'+t+'" width="600px"></div><h2 id="spring" tabindex="-1"><a class="header-anchor" href="#spring"><span>Spring</span></a></h2><p>Spring 一站式的轻量级的java开发框架，采用容器化管理，创建各种 Bean 实例，并维护着 bean 与bean之间的关系。</p><h3 id="两大核心利器" tabindex="-1"><a class="header-anchor" href="#两大核心利器"><span>两大核心利器</span></a></h3><ul><li>IOC（控制反转）</li><li>AOP（面向切面）</li></ul><p>为Java应用程序开发提供了全面的基础架构支持。包含很多开箱即用的模块，如：SpringJDBC、SpringSecurity、SpringAOP、SpringORM，提高了应用开发的效率。</p><h2 id="spring-mvc" tabindex="-1"><a class="header-anchor" href="#spring-mvc"><span>Spring MVC</span></a></h2><p>一个网站通常有前台页面和后台处理逻辑，为了打通这层关系，衍生出类似 struts2 框架。专门解决前台页面与后端数据处理之间的映射关系。</p><p><strong>当然，Spring 家族为了维护其生态地位，把这种 <code>MVC</code> 模式的优势吸收了进来，加以改造，于是就诞生了 <code>Spring MVC</code></strong></p><p>Spring MVC是 Spring 的 web 框架。</p><p>通过<code>Dispatcher Servlet</code>、<code>ModelAndView </code>和<code>View Resolver </code>，开发web应用变得很容易。主要针对的是带页面的系统开发，URL路由、Session、模板引擎、静态Web资源等等。</p><blockquote><p>SpringMVC = Struts2 + Spring</p></blockquote><p><strong>处理流程：</strong></p><div align="left"><img src="'+n+'" width="600px"></div><p>Spring MVC 框架与其他 Web MVC 框架一样，是请求驱动的，围绕一个中央 Servlet 设计，该 Servlet 将请求分派给控制器并提供其他功能以促进 Web 应用程序的开发。然而，Spring 的 DispatcherServlet 不仅仅如此。它与 Spring IoC 容器完全集成，因此允许您使用 Spring 的其他功能。</p><h2 id="spring-boot" tabindex="-1"><a class="header-anchor" href="#spring-boot"><span>Spring Boot</span></a></h2><p>Spring 配置复杂，xml文件有大量的bean定义，开发起来繁琐。</p><p>另外，分布式时代，微服务盛行，为了统一后端框架，便于运维维护，开始推行 Spring Boot。</p><p>Spring Boot 是Spring框架的扩展，提供更加 <code>丰富的注解</code>，可以参考之前文章 <a href="https://mp.weixin.qq.com/s/_hk_alSB0evyv80nw-mPsg" target="_blank" rel="noopener noreferrer">Spring Boot 常用注解一网打尽</a></p><p>同时，将Servlet容器集成到框架中，如：<code>Tomcat</code>、<code>Jetty</code>、<code>Undertow</code>，我们开发时不需要再手动在 IDEA 中配置 tomcat 的路径，只需要<code>main函数</code>启动。</p><p>Spring Boot 框架相对于 Spring MVC 框架来说，更专注于后端接口，不开发前端页面，推崇<strong>前后分离</strong>。</p><p>根据 <strong>约定胜于配置</strong> 原则，与市场主流的开源框架打通， 设计了 <code>Starter</code> 和 <code>AutoConfiguration</code> 机制，简化配置流程，通过简单的jar包引入，快速具备组件集成能力。大大提高了程序员的开发效率。</p><h3 id="常用的-starter-组件" tabindex="-1"><a class="header-anchor" href="#常用的-starter-组件"><span>常用的 Starter 组件</span></a></h3><ul><li><p>spring-boot-starter：核心启动器，包含了自动配置、日志和YAML</p></li><li><p>spring-boot-starter-web：构建Web应用，使用 Tomcat 作为内嵌容器</p></li><li><p>spring-boot-starter-amqp：通过spring-rabbit来支持AMQP协议（Advanced Message Queuing Protocol</p></li><li><p>spring-boot-starter-aop：面向方面的编程即AOP，包括spring-aop和AspectJ</p></li><li><p>spring-boot-starter-groovy-templates：支持Groovy模板引擎</p></li><li><p>spring-boot-starter-data-redis：使用Redis 和 Spring Data Redis，以及Jedis 客户端</p></li><li><p>spring-boot-starter-data-elasticsearch：支持ElasticSearch搜索和分析引擎</p></li><li><p>spring-boot-starter-data-jpa：支持 Java Persistence API</p></li><li><p>spring-boot-starter-data-mongodb：支持MongoDB数据</p></li><li><p>spring-boot-starter-logging：Spring Boot默认的日志框架Logback</p></li><li><p>更多，这里就不一一列举了</p></li></ul><p><strong>历史文章：</strong></p><ul><li><a href="https://mp.weixin.qq.com/s/7DgpAA--uuOaWbvJWwfM9w" target="_blank" rel="noopener noreferrer">一文读懂Spring Boot各模块组件依赖关系</a></li></ul><h2 id="spring-cloud" tabindex="-1"><a class="header-anchor" href="#spring-cloud"><span>Spring Cloud</span></a></h2><p>分布式时代，系统间需要打通、组成集群，从而具备更大吞吐能力。我们会将一个单体项目拆分成多个微服务，每个微服务系统独立技术选型、开发、部署上线，各个微服务之间打通、相互协调，从而完成全流程服务。</p><p>当然，为了降低不同微服务系统间的差异化接入成本，通常都是统一基于 Spring Boot 构建微服务系统。</p><p>Spring Cloud 将多个 Spring Boot 单体微服务整合、管理，是一系列框架的有序集合，利用Spring Boot的开发便利性简化了分布式系统基础设施的开发。</p><p>Spring Cloud 关注 <strong>微服务整合、管理的服务治理框架，具有生态定位</strong>，提供丰富的组件框架，如：</p><ul><li>服务注册、发现</li><li>服务间调用</li><li>负载均衡</li><li>网关</li><li>配置中心</li><li>断路器</li><li>消息总线</li><li>监控 等</li></ul><div align="left"><img src="'+a+'" width="600px"></div><blockquote><p>链接：<a href="https://www.springcloud.cc/" target="_blank" rel="noopener noreferrer">https://www.springcloud.cc/</a></p></blockquote><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>1、Spring 框架就像一个家族，有众多衍生产品，如：Spring Boot 、Spring security、jpa等，但他们的基础都是Spring的IOC、AOP等，IOC提供了依赖注入的容器，AOP解决了面向切面编程，在此两者基础上实现其他延伸产品的高级功能</p><p>2、Spring MVC 是基于Servlet的一个MVC框架，主要解决Web开发问题，因为Spring的配置非常复杂，各种XML、JavaConfig、servlet处理起来比较繁琐</p><p>3、为了简化开发者的使用，从而创造性的推出了Spring Boot框架，约定胜于配置，简化Spring MVC的配置流程。</p><p>区别于Spring MVC的是，Spring Boot专注于微服务的接口开发，和前端解耦。虽然Spring Boot也可以做成Spring MVC前后台一起开发，但不符合Spring Boot框架的初衷。</p><p>4、对于Spring Cloud框架来说，它和Spring Boot一样，关注的是微服务的开发。但Spring Cloud更关注的是多个微服务系统的整合和管理，相当于多个Spring Boot框架的单体微服务。</p>',46)]))}const S=p(g,[["render",s]]),h=JSON.parse('{"path":"/posts/interview/spring/springcloud/spring-frame-compare.html","title":"讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？","lang":"zh-CN","frontmatter":{"title":"讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？","description":"讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？ 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 大家好，我是老马~ 搞后端开发的同学，对 Spring 家族一定不陌生。 Spring 全家桶了为了解决不同场景的问题，逐渐演化出多套生态环框，...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/spring/springcloud/spring-frame-compare.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？"}],["meta",{"property":"og:description","content":"讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？ 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 大家好，我是老马~ 搞后端开发的同学，对 Spring 家族一定不陌生。 Spring 全家桶了为了解决不同场景的问题，逐渐演化出多套生态环框，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"讲一讲 Spring、SpringMVC、SpringBoot、SpringCloud 之间的关系？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":4.86,"words":1458},"filePathRelative":"posts/interview/spring/springcloud/spring-frame-compare.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p>大家好，我是老马~</p>\\n<p>搞后端开发的同学，对 Spring 家族一定不陌生。</p>\\n<p>Spring 全家桶了为了解决不同场景的问题，逐渐演化出多套生态环框，如： Spring、SpringMVC、SpringBoot、SpringCloud</p>","autoDesc":true}');export{S as comp,h as data};
