import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as o,o as p}from"./app-NomDibRt.js";const i="/vpress/images/pay/arch/22-1.png",n="/vpress/images/pay/arch/22-2.png",a={};function s(b,t){return p(),r("div",null,t[0]||(t[0]=[o('<h1 id="提升篇-通过链路追踪优化慢请求" tabindex="-1"><a class="header-anchor" href="#提升篇-通过链路追踪优化慢请求"><span>提升篇：通过链路追踪优化慢请求</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p>分布式时代，原来的单体应用被拆分为若干的微服务，各个子系统负责聚类业务的垂直化深度建设，职责单一，既保证了系统的性能也方便未来扩展。</p><p><strong>但是，任何事情有利就有弊</strong></p><p>我们经常也会有苦恼的时候，比如下面这些问题：<br> 1、客户端一次请求，内部要跨越十几个子系统，如果出现慢响应，如何快速定位卡在哪个环节？<br> 2、老板安排任务，优化一下系统性能，如何展开工作？<br> 3、线上部署太多系统，日志打印在不同机器磁盘，排查问题时需要根据关键信息（如：订单id）去不同的服务器上搜索，非常痛苦<br> 4、某个核心服务（如：下单接口）在高峰期时出现少量的慢请求，有用户向客服投诉在APP下单时出现等待时间比较长，但是 APP 下单接口会调用多个 RPC 服务或者使用多个资源，有些接口是其他团队负责的，一时间不知道如何下手</p><p><strong>当你遇到这些问题，你会如何处理？</strong></p><div align="left"><img src="'+i+'" width="300px"></div><p>一个简单的思路就是 打日志，将问题接口的每一步耗时情况以及异常日志全部打印出来，然后人肉收集这些日志数据并分析，找到需要优化的环节</p><p>代码类似这样：</p><div align="left"><img src="'+n+'" width="600px"></div><p>确实挺方便，但我们可能会遇到这样问题，如果有多个请求并行处理，这样多个请求日志会穿插在一起，这时我们需要用关键字 搜索来筛选出一个请求的日志，这个关键字要求具有唯一性 ，比如采用 UUID 生成。</p><p><strong>大致实现思路：</strong></p><p>1、在流量的入口处，生成这么一个 requestID ，然后放到线程上下文中<br> 2、这样执行到后面的方法，就可以从上下文取到这个 requestID<br> 3、然后，在各个关键环节将 requestID 和 耗时 等信息打印到日志<br> 4、最后，通过requestID 就可以了解一个链路上的耗时情况</p>',13)]))}const m=e(a,[["render",s]]),l=JSON.parse('{"path":"/posts/interview/pay/arch/%E6%8F%90%E5%8D%87%E7%AF%87%EF%BC%9A%E9%80%9A%E8%BF%87%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E4%BC%98%E5%8C%96%E6%85%A2%E8%AF%B7%E6%B1%82.html","title":"提升篇：通过链路追踪优化慢请求","lang":"zh-CN","frontmatter":{"title":"提升篇：通过链路追踪优化慢请求","pay":"https://articles.zsxq.com/id_n73ii4401nal.html","description":"提升篇：通过链路追踪优化慢请求 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 分布式时代，原来的单体应用被拆分为若干的微服务，各个子系统负责聚类业务的垂直化深度建设，职责单一，既保证了系统的性能也方便未来扩展。 但是，任何事情有利就有弊 我们经常也会有苦恼的时候，比如下面这些问题： 1、客户...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/pay/arch/%E6%8F%90%E5%8D%87%E7%AF%87%EF%BC%9A%E9%80%9A%E8%BF%87%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E4%BC%98%E5%8C%96%E6%85%A2%E8%AF%B7%E6%B1%82.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"提升篇：通过链路追踪优化慢请求"}],["meta",{"property":"og:description","content":"提升篇：通过链路追踪优化慢请求 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 分布式时代，原来的单体应用被拆分为若干的微服务，各个子系统负责聚类业务的垂直化深度建设，职责单一，既保证了系统的性能也方便未来扩展。 但是，任何事情有利就有弊 我们经常也会有苦恼的时候，比如下面这些问题： 1、客户..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"提升篇：通过链路追踪优化慢请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":2.13,"words":638},"filePathRelative":"posts/interview/pay/arch/提升篇：通过链路追踪优化慢请求.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p>分布式时代，原来的单体应用被拆分为若干的微服务，各个子系统负责聚类业务的垂直化深度建设，职责单一，既保证了系统的性能也方便未来扩展。</p>\\n<p><strong>但是，任何事情有利就有弊</strong></p>","autoDesc":true}');export{m as comp,l as data};
