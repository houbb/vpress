import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as o,o as r}from"./app-NomDibRt.js";const a="/vpress/images/pay/arch/13-1.png",n={};function p(l,t){return r(),i("div",null,t[0]||(t[0]=[o('<h1 id="数据库-海量数据业务有哪些方案" tabindex="-1"><a class="header-anchor" href="#数据库-海量数据业务有哪些方案"><span>数据库：海量数据业务有哪些方案</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p>互联网时代，亿级用户各种网络行为产生大量数据，如何解决海量数据存储？如何高性能读写？解决思路有哪些，本文列举了常用的解决方案：</p><ul><li>缓存加速</li><li>读写分离</li><li>垂直拆分</li><li>分库分表</li><li>冷热数据分离</li><li>ES 助力复杂搜索</li><li>NoSQL</li><li>NewSQL</li></ul><h2 id="一、缓存加速" tabindex="-1"><a class="header-anchor" href="#一、缓存加速"><span>一、缓存加速</span></a></h2><p>缓存就是为了弥补存储系统在这些复杂业务场景下的不足，其基本原理是将可能重复使用的数据放到内存中，一次生成、多次使用，避免每次使用都去访问存储系统。</p><p>缓存能够带来性能的大幅提升，以 Memcache 为例，单台 Memcache 服务器简单的 key-value 查询能够达到 TPS 50000 以上；Redis性能数据是10W+ QPS</p><p><strong>为什么缓存的速度那么快？</strong></p><div align="left"><img src="'+a+'" width="450px"></div><p>从上图中发现，同机房两台服务器跑个来回，再从内存中顺序读取 1M 数据，共耗时 0.75 ms。如果从硬盘读取，做一次磁盘寻址需要 10ms，再从磁盘里顺序读取 1M 数据需要 30ms。可见，使用内存缓存性能上提高多个数量级，同时也能支持更高的并发量。</p>',10)]))}const c=e(n,[["render",p]]),b=JSON.parse('{"path":"/posts/interview/pay/arch/%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9A%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE%E4%B8%9A%E5%8A%A1%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%A1%88.html","title":"数据库：海量数据业务有哪些方案","lang":"zh-CN","frontmatter":{"title":"数据库：海量数据业务有哪些方案","pay":"https://articles.zsxq.com/id_w7wg7e3n8w9g.html","description":"数据库：海量数据业务有哪些方案 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 互联网时代，亿级用户各种网络行为产生大量数据，如何解决海量数据存储？如何高性能读写？解决思路有哪些，本文列举了常用的解决方案： 缓存加速 读写分离 垂直拆分 分库分表 冷热数据分离 ES 助力复杂搜索 NoSQL ...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/pay/arch/%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9A%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE%E4%B8%9A%E5%8A%A1%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"数据库：海量数据业务有哪些方案"}],["meta",{"property":"og:description","content":"数据库：海量数据业务有哪些方案 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 互联网时代，亿级用户各种网络行为产生大量数据，如何解决海量数据存储？如何高性能读写？解决思路有哪些，本文列举了常用的解决方案： 缓存加速 读写分离 垂直拆分 分库分表 冷热数据分离 ES 助力复杂搜索 NoSQL ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库：海量数据业务有哪些方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":1.29,"words":386},"filePathRelative":"posts/interview/pay/arch/数据库：海量数据业务有哪些方案.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p>互联网时代，亿级用户各种网络行为产生大量数据，如何解决海量数据存储？如何高性能读写？解决思路有哪些，本文列举了常用的解决方案：</p>\\n<ul>\\n<li>缓存加速</li>\\n<li>读写分离</li>\\n<li>垂直拆分</li>\\n<li>分库分表</li>\\n<li>冷热数据分离</li>\\n<li>ES 助力复杂搜索</li>\\n<li>NoSQL</li>\\n<li>NewSQL</li>\\n</ul>","autoDesc":true}');export{c as comp,b as data};
