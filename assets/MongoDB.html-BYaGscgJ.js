import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as e}from"./app-NomDibRt.js";const p="/vpress/images/spring/springboot/18-1.jpg",l="/vpress/images/spring/springboot/18-2.jpg",r="/vpress/images/spring/springboot/18-3.jpg",t="/vpress/images/spring/springboot/18-4.jpg",d={};function o(c,s){return e(),a("div",null,s[0]||(s[0]=[i(`<h1 id="spring-boot-集成-mongodb" tabindex="-1"><a class="header-anchor" href="#spring-boot-集成-mongodb"><span>Spring Boot 集成 MongoDB</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p><code>Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、注册中心、分布式配置等常用开源组件，大概有几十篇文章，陆续会开放出来，感兴趣同学可以关注&amp;收藏</code></p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>MongoDB 是一个基于分布式文件存储的数据库，由 C++ 语言编写，旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p><p>MongoDB 最大的特点就是无 Schema 限制，灵活度很高。数据格式是 BSON，BSON 是一种类似 JSON 的二进制形式的存储格式，简称 Binary JSON 它和 JSON 一样，支持内嵌的文档对象和数组对象。</p><h3 id="与关系型数据库概念比较" tabindex="-1"><a class="header-anchor" href="#与关系型数据库概念比较"><span>与关系型数据库概念比较</span></a></h3><table><thead><tr><th>Mysql</th><th>MongoDB</th></tr></thead><tbody><tr><td>Database（数据库）</td><td>Database（数据库）</td></tr><tr><td>Table（表）</td><td>Collection（集合）</td></tr><tr><td>Row（行）</td><td>Document（文档）</td></tr><tr><td>Column（列）</td><td>Field（字段）</td></tr></tbody></table><p>MongoDB是一个独立的服务器。如MySQL或PostreSQL一样，MongoDB提供监听端口以便接入。它提供了用于查询，创建，更新和删除的工具。从理论上讲，你使用它的工作方式相同：连接，执行任务并关闭连接；</p><p>它是基于文档的，而不是基于表格的。MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组；</p><p>它是非结构化的。MongoDB没有很多查询语句。在大多数情况下，只需给它一个数组指定你想要的信息，然后它会给你返回文档的数组。如果你想运行一些非常复杂的查询(如Map-Reduce操作)，可以向MongoDB传递JavaScript，其内部的JavaScript引擎可以解析这个脚本；</p><p>高性能、易部署、易使用，存储数据非常方便；<br> 支持完全索引，包含内部对象；<br> 它具有强大的主流开发语言支持，如C#、C++、Java、PHP、Perl、Python、Ruby。</p><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h3><ul><li>文档结构的存储方式，能够更便捷的获取数据；</li><li>内置GridFS，支持大容量的存储；</li><li>内置Sharding，分片简单；</li><li>海量数据下，性能优越；</li><li>支持复制集、主备、互为主备、自动分片等特性。</li></ul><h3 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h3><ul><li>不支持事务操作；</li><li>磁盘空间占用比较大；</li><li>MongoDB没有如MySQL那样成熟的维护工具；</li><li>无法进行关联表查询，不适用于关系多的数据；</li><li>复杂聚合操作通过map reduce创建，速度慢；</li><li>模式自由，自由灵活的文件存储格式带来的数据错误。</li></ul><h2 id="代码演示" tabindex="-1"><a class="header-anchor" href="#代码演示"><span>代码演示</span></a></h2><h3 id="外部依赖" tabindex="-1"><a class="header-anchor" href="#外部依赖"><span>外部依赖</span></a></h3><p>Spring Boot 已经为 MongoDB 封装了starter组件，只需在 pom.xml 文件中添加jar版本依赖即可：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>在配置文件 application.yaml 中配置 MongoDB 的相关参数，具体内容如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>  application:</span></span>
<span class="line"><span>    name: spring-boot-bulking-mongo</span></span>
<span class="line"><span>  # 数据源配置</span></span>
<span class="line"><span>  data:</span></span>
<span class="line"><span>    mongodb:</span></span>
<span class="line"><span>      #主机地址</span></span>
<span class="line"><span>      host: 127.0.0.1</span></span>
<span class="line"><span>      #数据库名称</span></span>
<span class="line"><span>      database: tomge</span></span>
<span class="line"><span>      #端口号</span></span>
<span class="line"><span>      port: 27017</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>工程结构如图所示：</p><div align="left"><img src="`+p+`" width="700px"></div><h3 id="定义实体对象" tabindex="-1"><a class="header-anchor" href="#定义实体对象"><span>定义实体对象</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Data</span></span>
<span class="line"><span>@AllArgsConstructor</span></span>
<span class="line"><span>@NoArgsConstructor</span></span>
<span class="line"><span>@Builder</span></span>
<span class="line"><span>public class User {</span></span>
<span class="line"><span>    @Id</span></span>
<span class="line"><span>    private Long id;</span></span>
<span class="line"><span>    private String name;</span></span>
<span class="line"><span>    private Integer age;</span></span>
<span class="line"><span>    @Field(&quot;locs&quot;)</span></span>
<span class="line"><span>    private Collection&lt;Address&gt; addresses = new LinkedHashSet&lt;Address&gt;();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>@Id 主键 不可重复，自带索引，可以在定义的列名上标注，需要自己生成并维护不重复的约束。如果自己不设置@Id主键，mongo会自动生成一个唯一主键，并且插入时效率远高于自己设置主键。在实际业务中不建议自己设置主键，应交给mongo自己生成，自己可以设置一个业务id，如int型字段，用自己设置的业务id来维护相关联的表。<br><br> @Field 代表一个字段，可以不加，不加的话默认以参数名为列名。</p></blockquote><h3 id="数据访问层-userrepository" tabindex="-1"><a class="header-anchor" href="#数据访问层-userrepository"><span>数据访问层 UserRepository</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public interface UserRepository extends MongoRepository&lt;User, String&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    User findByName(String name);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 小于：$lt</span></span>
<span class="line"><span>     * 小于或等于：$lte</span></span>
<span class="line"><span>     * 大于：$gt</span></span>
<span class="line"><span>     * 大于或等于：$gte</span></span>
<span class="line"><span>     * 不等于：$ne</span></span>
<span class="line"><span>     * 属于：$in</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    @Query(&quot;{&#39;age&#39;: { &#39;$lt&#39; : ?0}}&quot;)</span></span>
<span class="line"><span>    List&lt;User&gt; withQueryFindByAge(Integer age);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>UserRepository</code> 接口继承 <code>MongoRepository </code>，默认提供很多实现，比如 CRUD 和列表查询参数相关的实现。<code>MongoRepository</code> 接口默认实现如下：</p><div align="left"><img src="`+l+`" width="700px"></div><h2 id="操作演示" tabindex="-1"><a class="header-anchor" href="#操作演示"><span>操作演示</span></a></h2><p>运行工程，浏览器访问地址：</p><p><a href="http://localhost:9071/queryByAge?age=27" target="_blank" rel="noopener noreferrer">http://localhost:9071/queryByAge?age=27</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[</span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span>    &quot;id&quot;: 112,</span></span>
<span class="line"><span>    &quot;name&quot;: &quot;TomGE&quot;,</span></span>
<span class="line"><span>    &quot;age&quot;: 26,</span></span>
<span class="line"><span>    &quot;addresses&quot;: [</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        &quot;number&quot;: 1,</span></span>
<span class="line"><span>        &quot;addressName&quot;: &quot;上海&quot;</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        &quot;number&quot;: 2,</span></span>
<span class="line"><span>        &quot;addressName&quot;: &quot;杭州&quot;</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        &quot;number&quot;: 3,</span></span>
<span class="line"><span>        &quot;addressName&quot;: &quot;广州&quot;</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        &quot;number&quot;: 4,</span></span>
<span class="line"><span>        &quot;addressName&quot;: &quot;苏州&quot;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Navicat Premium 验证数据</p><div align="left"><img src="`+r+`" width="700px"></div><p>也支持命令行的方式验证数据</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 进入mongon 容器实例</span></span>
<span class="line"><span>docker exec -it mongo mongo admin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#  显示库列表</span></span>
<span class="line"><span>show dbs</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 使用某个数据库</span></span>
<span class="line"><span>use tomge</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 显示所有表</span></span>
<span class="line"><span>show collections</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 如果存在 user 表，格式化显示 user 表内容：</span></span>
<span class="line"><span>db.user.find().pretty()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="left"><img src="`+t+`" width="500px"></div><h2 id="项目源码" tabindex="-1"><a class="header-anchor" href="#项目源码"><span>项目源码</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>https://github.com/aalansehaiyang/spring-boot-bulking  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>模块：spring-boot-bulking-mongo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://www.jianshu.com/p/157f9060753c" target="_blank" rel="noopener noreferrer">https://www.jianshu.com/p/157f9060753c</a></li></ul>`,46)]))}const h=n(d,[["render",o]]),v=JSON.parse('{"path":"/posts/interview/spring/springboot/MongoDB.html","title":"Spring Boot 集成 MongoDB","lang":"zh-CN","frontmatter":{"title":"Spring Boot 集成 MongoDB","description":"Spring Boot 集成 MongoDB 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/spring/springboot/MongoDB.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Spring Boot 集成 MongoDB"}],["meta",{"property":"og:description","content":"Spring Boot 集成 MongoDB 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot 集成 MongoDB\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":4.51,"words":1354},"filePathRelative":"posts/interview/spring/springboot/MongoDB.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p><code>Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、注册中心、分布式配置等常用开源组件，大概有几十篇文章，陆续会开放出来，感兴趣同学可以关注&amp;收藏</code></p>","autoDesc":true}');export{h as comp,v as data};
