import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-NomDibRt.js";const l="/vpress/images/spring/springboot/13-2.jpg",t="/vpress/images/spring/springboot/13-1.jpg",p={};function r(o,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h1 id="spring-boot-集成-elastic-job" tabindex="-1"><a class="header-anchor" href="#spring-boot-集成-elastic-job"><span>Spring Boot 集成 Elastic-Job</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p><code>Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、注册中心、分布式配置等常用开源组件，大概有几十篇文章，陆续会开放出来，感兴趣同学可以关注&amp;收藏</code></p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Elasticjob是一个开源的分布式调度解决方案。Elasticjob由两个相互独立的子项目Elastic-Job-Lite和Elastic-Job-Cloud组成。Elastic-Job-Lite定位为轻量级无中心化解决方案，使用jar包的形式提供分布式任务的协调服务；Elastic-Job-Cloud采用自研 Mesos Framework的解决方案，额外提供资源治理、应用分发以及进程隔离等功能。</p><p>Elastic-Job-Lite，它支持多种任务类型，支持任务分片，可以将任务拆分成多个子任务，像原先介绍的Quartz集群方案中可能存在的任务处理的单机极限问题，可以利用Elastic-Job-Lite解决，可以通过预先分配分片项参数，任务分片后，每个分片任务只处理跟自己相关的分片数据，这样就可以将单机处理的数据，分散成多机处理，缓解压力。Elastic-Job还支持分片级别的故障切换，具有容错性，一个分片任务故障后，可以被其他机器的任务接管，继续执行分片任务。</p><h2 id="代码演示" tabindex="-1"><a class="header-anchor" href="#代码演示"><span>代码演示</span></a></h2><h3 id="外部依赖" tabindex="-1"><a class="header-anchor" href="#外部依赖"><span>外部依赖</span></a></h3><p>在 pom.xml 文件中添加 Elastic-Job 依赖：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.dangdang&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;elastic-job-lite-core&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;2.1.5&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.dangdang&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;elastic-job-lite-spring&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;2.1.5&lt;/version&gt;</span></span>
<span class="line"><span>    &lt;exclusions&gt;</span></span>
<span class="line"><span>        &lt;exclusion&gt;</span></span>
<span class="line"><span>            &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;</span></span>
<span class="line"><span>            &lt;artifactId&gt;curator-client&lt;/artifactId&gt;</span></span>
<span class="line"><span>        &lt;/exclusion&gt;</span></span>
<span class="line"><span>    &lt;/exclusions&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>在配置文件 <code>application.yaml</code> 中配置 Elastic-Job 的相关参数，具体内容如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>elasticjob:</span></span>
<span class="line"><span>  zk: 127.0.0.1:2181</span></span>
<span class="line"><span>  namespace: ej</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="elastic-job-配置类" tabindex="-1"><a class="header-anchor" href="#elastic-job-配置类"><span>Elastic-Job 配置类</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Bean</span></span>
<span class="line"><span>public CoordinatorRegistryCenter regCenter() {</span></span>
<span class="line"><span>    CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter(new ZookeeperConfiguration(zk, nameSpace));</span></span>
<span class="line"><span>    regCenter.init();</span></span>
<span class="line"><span>    return regCenter;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private LiteJobConfiguration getLiteJobConfiguration(final Class&lt;? extends SimpleJob&gt; jobClass, final String cron) {</span></span>
<span class="line"><span>    return LiteJobConfiguration.newBuilder(</span></span>
<span class="line"><span>            new SimpleJobConfiguration(JobCoreConfiguration</span></span>
<span class="line"><span>                    .newBuilder(jobClass.getSimpleName(), cron, 1)</span></span>
<span class="line"><span>                    .shardingItemParameters(&quot;1=1&quot;)</span></span>
<span class="line"><span>                    .build(), jobClass.getCanonicalName()))</span></span>
<span class="line"><span>            .overwrite(true)</span></span>
<span class="line"><span>            .build();</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Bean(initMethod = &quot;init&quot;)</span></span>
<span class="line"><span>public JobScheduler createBrandActivityJobSchedule(final UserCountJob userCountJob, CoordinatorRegistryCenter regCenter) {</span></span>
<span class="line"><span>    return new SpringJobScheduler(userCountJob, regCenter,</span></span>
<span class="line"><span>            getLiteJobConfiguration(userCountJob.getClass(),</span></span>
<span class="line"><span>                    // 每10秒执行一次</span></span>
<span class="line"><span>                    &quot;*/10 * * * * ? *&quot;), new TimeStatisticsListener());</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写-job-任务" tabindex="-1"><a class="header-anchor" href="#编写-job-任务"><span>编写 Job 任务</span></a></h3><p>框架预留扩展接口<code>com.dangdang.ddframe.job.api.simple.SimpleJob</code>，定义业务类<code>UserCountJob</code>，然后在<code>execute()</code> 方法中实现我们的业务逻辑。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>public class UserCountJob implements SimpleJob {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void execute(ShardingContext shardingContext) {</span></span>
<span class="line"><span>        // 分片上下文参数</span></span>
<span class="line"><span>        System.out.println(&quot;ShardingContext：&quot; + JSON.toJSONString(shardingContext));</span></span>
<span class="line"><span>        long userCount = 1200;</span></span>
<span class="line"><span>        System.out.println(new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(new Date()) + &quot; 用户注册数：&quot; + userCount);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="elastic-job-控制台" tabindex="-1"><a class="header-anchor" href="#elastic-job-控制台"><span>Elastic-Job 控制台</span></a></h2><p>控制台地址：</p><p><a href="http://localhost:8899/#" target="_blank" rel="noopener noreferrer">http://localhost:8899/#</a></p><ul><li>配置 zookeeper 注册中心</li></ul><div align="left"><img src="`+l+'" width="800px"></div><ul><li>客户端系统启动时，会自动上报 Job 任务</li></ul><div align="left"><img src="'+t+`" width="800px"></div><h2 id="项目源码" tabindex="-1"><a class="header-anchor" href="#项目源码"><span>项目源码</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>https://github.com/aalansehaiyang/spring-boot-bulking  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>模块：spring-boot-bulking-elasticjob</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)]))}const b=s(p,[["render",r]]),u=JSON.parse('{"path":"/posts/interview/spring/springboot/Elastic-Job.html","title":"Spring Boot 集成 Elastic-Job","lang":"zh-CN","frontmatter":{"title":"Spring Boot 集成 Elastic-Job","description":"Spring Boot 集成 Elastic-Job 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/spring/springboot/Elastic-Job.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Spring Boot 集成 Elastic-Job"}],["meta",{"property":"og:description","content":"Spring Boot 集成 Elastic-Job 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot 集成 Elastic-Job\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":2.53,"words":760},"filePathRelative":"posts/interview/spring/springboot/Elastic-Job.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p><code>Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、注册中心、分布式配置等常用开源组件，大概有几十篇文章，陆续会开放出来，感兴趣同学可以关注&amp;收藏</code></p>","autoDesc":true}');export{b as comp,u as data};
