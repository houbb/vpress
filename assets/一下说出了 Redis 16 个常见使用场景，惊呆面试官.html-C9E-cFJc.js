import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as n,o as a}from"./app-NomDibRt.js";const l="/vpress/images/middleware/redis/8-6.png",d="/vpress/images/middleware/redis/8-1.png",p="/vpress/images/middleware/redis/8-2.png",r="/vpress/images/middleware/redis/8-3.png",t="/vpress/images/middleware/redis/8-4.png",h="/vpress/images/middleware/redis/8-5.png",c={};function o(b,s){return a(),e("div",null,s[0]||(s[0]=[n('<h1 id="一下说出了-redis-16-个常见使用场景-惊呆面试官" tabindex="-1"><a class="header-anchor" href="#一下说出了-redis-16-个常见使用场景-惊呆面试官"><span>一下说出了 Redis 16 个常见使用场景，惊呆面试官</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><hr><p>今天给大家介绍下 Redis 的一些业务场景。</p><div align="left"><img src="'+l+`" width="460px"></div><h2 id="_1、缓存" tabindex="-1"><a class="header-anchor" href="#_1、缓存"><span>1、缓存</span></a></h2><p>String类型</p><p>例如：热点数据缓存（例如：报表、明星出轨），对象缓存、全页缓存、可以提升热点数据的访问数据。</p><h2 id="_2、数据共享分布式" tabindex="-1"><a class="header-anchor" href="#_2、数据共享分布式"><span>2、数据共享分布式</span></a></h2><p>String 类型，因为 Redis 是分布式的独立服务，可以在多个应用之间共享</p><p>例如：分布式 Session</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span> &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;</span></span>
<span class="line"><span> &lt;artifactId&gt;spring-session-data-redis&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、分布式锁" tabindex="-1"><a class="header-anchor" href="#_3、分布式锁"><span>3、分布式锁</span></a></h2><p>String 类型setnx方法，只有不存在时才能添加成功，返回 <strong>true</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public static boolean getLock(String key) {</span></span>
<span class="line"><span>    Long flag = jedis.setnx(key, &quot;1&quot;);</span></span>
<span class="line"><span>    if (flag == 1) {</span></span>
<span class="line"><span>        jedis.expire(key, 10);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    return flag == 1;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public static void releaseLock(String key) {</span></span>
<span class="line"><span>    jedis.del(key);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、全局id" tabindex="-1"><a class="header-anchor" href="#_4、全局id"><span>4、全局ID</span></a></h2><p>int类型，incrby，利用原子性</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>incrby userid 1000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>分库分表的场景，一次性拿一段</p><h2 id="_5、计数器" tabindex="-1"><a class="header-anchor" href="#_5、计数器"><span>5、计数器</span></a></h2><p>int类型，incr方法</p><p>例如：文章的阅读量、微博点赞数、允许一定的延迟，先写入Redis再定时同步到数据库</p><h2 id="_6、限流" tabindex="-1"><a class="header-anchor" href="#_6、限流"><span>6、限流</span></a></h2><p>int类型，incr方法</p><p>以访问者的ip和其他信息作为key，访问一次增加一次计数，超过次数则返回false</p><h2 id="_7、位统计" tabindex="-1"><a class="header-anchor" href="#_7、位统计"><span>7、位统计</span></a></h2><p>String类型的bitcount（1.6.6的bitmap数据结构介绍）</p><p>字符是以8位二进制存储的</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>set k1 a</span></span>
<span class="line"><span>setbit k1 6 1</span></span>
<span class="line"><span>setbit k1 7 0</span></span>
<span class="line"><span>get k1</span></span>
<span class="line"><span>/* 6 7 代表的a的二进制位的修改</span></span>
<span class="line"><span>a 对应的ASCII码是97，转换为二进制数据是01100001</span></span>
<span class="line"><span>b 对应的ASCII码是98，转换为二进制数据是01100010</span></span>
<span class="line"><span></span></span>
<span class="line"><span>因为bit非常节省空间（1 MB=8388608 bit），可以用来做大数据量的统计。</span></span>
<span class="line"><span>*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：在线用户统计，留存用户统计</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>setbit onlineusers 01</span></span>
<span class="line"><span>setbit onlineusers 11</span></span>
<span class="line"><span>setbit onlineusers 20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>支持按位与、按位或等等操作</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>BITOPANDdestkeykey[key...] ，对一个或多个 key 求逻辑并，并将结果保存到 destkey 。</span></span>
<span class="line"><span>BITOPORdestkeykey[key...] ，对一个或多个 key 求逻辑或，并将结果保存到 destkey 。</span></span>
<span class="line"><span>BITOPXORdestkeykey[key...] ，对一个或多个 key 求逻辑异或，并将结果保存到 destkey 。</span></span>
<span class="line"><span>BITOPNOTdestkeykey ，对给定 key 求逻辑非，并将结果保存到 destkey 。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算出7天都在线的用户</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>BITOP &quot;AND&quot; &quot;7_days_both_online_users&quot; &quot;day_1_online_users&quot; </span></span>
<span class="line"><span>&quot;day_2_online_users&quot; ...  &quot;day_7_online_users&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、购物车" tabindex="-1"><a class="header-anchor" href="#_8、购物车"><span>8、购物车</span></a></h2><p>String 或 hash。所有String可以做的hash都可以做</p><div align="left"><img src="`+d+'" width="300px"></div><p>key：用户id；field：商品id；value：商品数量。</p><ul><li>+1：hincr</li><li>-1：hdecr</li><li>删除：hdel</li><li>全选：hgetall</li><li>商品数：hlen</li></ul><h2 id="_9、用户消息时间线-timeline" tabindex="-1"><a class="header-anchor" href="#_9、用户消息时间线-timeline"><span>9、用户消息时间线 timeline</span></a></h2><p>list，双向链表，直接作为timeline就好了。插入有序</p><h2 id="_10、消息队列" tabindex="-1"><a class="header-anchor" href="#_10、消息队列"><span>10、消息队列</span></a></h2><blockquote><p>List提供了两个阻塞的弹出操作：blpop/brpop，可以设置超时时间</p></blockquote><p>blpop：blpop key1 timeout 移除并获取列表的第一个元素，如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</p><p>brpop：brpop key1 timeout 移除并获取列表的最后一个元素，如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</p><p>上面的操作。其实就是java的阻塞队列。学习的东西越多。学习成本越低</p><p>队列：先进先出：rpush blpop，左头右尾，右边进入队列，左边出队列</p><p>栈：先进后出：rpush brpop</p><h2 id="_11、抽奖" tabindex="-1"><a class="header-anchor" href="#_11、抽奖"><span>11、抽奖</span></a></h2><p>自带一个随机获得值</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>spop myset</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_12、点赞、签到、打卡" tabindex="-1"><a class="header-anchor" href="#_12、点赞、签到、打卡"><span>12、点赞、签到、打卡</span></a></h2><div align="left"><img src="'+p+'" width="560px"></div><p>假如上面的微博ID是t1001，用户ID是u3001</p><p>用 like:t1001 来维护 t1001 这条微博的所有点赞用户</p><ul><li>点赞了这条微博：sadd like:t1001 u3001</li><li>取消点赞：srem like:t1001 u3001</li><li>是否点赞：sismember like:t1001 u3001</li><li>点赞的所有用户：smembers like:t1001</li><li>点赞数：scard like:t1001</li></ul><p>是不是比数据库简单多了。</p><h2 id="_13、商品标签" tabindex="-1"><a class="header-anchor" href="#_13、商品标签"><span>13、商品标签</span></a></h2><div align="left"><img src="'+r+`" width="560px"></div><p>老规矩，用 tags:i5001 来维护商品所有的标签。</p><ul><li>sadd tags:i5001 画面清晰细腻</li><li>sadd tags:i5001 真彩清晰显示屏</li><li>sadd tags:i5001 流程至极</li></ul><h2 id="_14、商品筛选" tabindex="-1"><a class="header-anchor" href="#_14、商品筛选"><span>14、商品筛选</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 获取差集</span></span>
<span class="line"><span>sdiff set1 set2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 获取交集（intersection ）</span></span>
<span class="line"><span>sinter set1 set2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 获取并集</span></span>
<span class="line"><span>sunion set1 set2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="left"><img src="`+t+`" width="560px"></div><p>假如：iPhone11 上市了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sadd brand:apple iPhone11</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sadd brand:ios iPhone11</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sad screensize:6.0-6.24 iPhone11</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sad screentype:lcd iPhone 11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>筛选商品，苹果的、ios的、屏幕在6.0-6.24之间的，屏幕材质是LCD屏幕</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sinter brand:apple brand:ios screensize:6.0-6.24 screentype:lcd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_15、用户关注、推荐模型" tabindex="-1"><a class="header-anchor" href="#_15、用户关注、推荐模型"><span>15、用户关注、推荐模型</span></a></h2><p>follow 关注 fans 粉丝</p><p>相互关注：</p><ul><li>sadd 1:follow 2</li><li>sadd 2:fans 1</li><li>sadd 1:fans 2</li><li>sadd 2:follow 1</li></ul><p>我关注的人也关注了他(取交集)：</p><ul><li>sinter 1:follow 2:fans</li></ul><p>可能认识的人：</p><ul><li>用户1可能认识的人(差集)：sdiff 2:follow 1:follow</li><li>用户2可能认识的人：sdiff 1:follow 2:follow</li></ul><h2 id="_16、排行榜" tabindex="-1"><a class="header-anchor" href="#_16、排行榜"><span>16、排行榜</span></a></h2><p>id 为6001 的新闻点击数加1：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>zincrby hotNews:20190926 1 n6001</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>获取今天点击最多的15条：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>zrevrange hotNews:20190926 0 15 withscores</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div align="left"><img src="`+h+'" width="300px"></div>',83)]))}const v=i(c,[["render",o]]),m=JSON.parse('{"path":"/posts/interview/middleware/redis/%E4%B8%80%E4%B8%8B%E8%AF%B4%E5%87%BA%E4%BA%86%20Redis%2016%20%E4%B8%AA%E5%B8%B8%E8%A7%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%8C%E6%83%8A%E5%91%86%E9%9D%A2%E8%AF%95%E5%AE%98.html","title":"一下说出了 Redis 16 个常见使用场景，惊呆面试官","lang":"zh-CN","frontmatter":{"title":"一下说出了 Redis 16 个常见使用场景，惊呆面试官","description":"一下说出了 Redis 16 个常见使用场景，惊呆面试官 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 今天给大家介绍下 Redis 的一些业务场景。 1、缓存 String类型 例如：热点数据缓存（例如：报表、明星出轨），对象缓存、全页缓存、可以提升热点数据的访问数据。 2、数据共享分布式...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/middleware/redis/%E4%B8%80%E4%B8%8B%E8%AF%B4%E5%87%BA%E4%BA%86%20Redis%2016%20%E4%B8%AA%E5%B8%B8%E8%A7%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%8C%E6%83%8A%E5%91%86%E9%9D%A2%E8%AF%95%E5%AE%98.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"一下说出了 Redis 16 个常见使用场景，惊呆面试官"}],["meta",{"property":"og:description","content":"一下说出了 Redis 16 个常见使用场景，惊呆面试官 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 今天给大家介绍下 Redis 的一些业务场景。 1、缓存 String类型 例如：热点数据缓存（例如：报表、明星出轨），对象缓存、全页缓存、可以提升热点数据的访问数据。 2、数据共享分布式..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一下说出了 Redis 16 个常见使用场景，惊呆面试官\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":4.26,"words":1279},"filePathRelative":"posts/interview/middleware/redis/一下说出了 Redis 16 个常见使用场景，惊呆面试官.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<hr>\\n<p>今天给大家介绍下 Redis 的一些业务场景。</p>\\n<div align=\\"left\\">\\n    <img src=\\"/images/middleware/redis/8-6.png\\" width=\\"460px\\">\\n</div>","autoDesc":true}');export{v as comp,m as data};
