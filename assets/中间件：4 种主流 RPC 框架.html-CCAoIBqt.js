import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as r,o as a}from"./app-NomDibRt.js";const p={};function i(n,t){return a(),o("div",null,t[0]||(t[0]=[r('<h1 id="中间件-4-种主流-rpc-框架" tabindex="-1"><a class="header-anchor" href="#中间件-4-种主流-rpc-框架"><span>中间件：4 种主流 RPC 框架</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p>随着业务的繁荣发展，架构也在逐步升级衍化，从传统的单体系统慢慢发展为分布式系统。直观感觉就是系统的数量发生了巨大变化。</p><p>现在，每个子系统只负责一小块业务的落地规划，配备少量的研发深度建设。但是一个个的孤岛系统是无法对外服务的，只要通过一定的通讯机制把他们有效的串联起来，那才能释放出最大价值。</p><p>如何通讯，就是我们今天要讲的 RPC 框架</p><h2 id="rpc-定义" tabindex="-1"><a class="header-anchor" href="#rpc-定义"><span>RPC 定义</span></a></h2><p>RPC（Remote Procedure Call Protocol）远程过程调用。一个通俗的描述是：客户端在不知道调用细节的情况下，开发者能够像调用本地方法一样调用远程的服务。</p><p>优势主要体现在两个方面：</p><ul><li>远程调用与本地调用基本没什么区别，都是直接调用一个方法即可</li><li>屏蔽了底层网络通讯、序列化、解压缩、路由转发等复杂逻辑，让我们把更多的精力聚焦到上层业务中</li></ul><h2 id="基本架构" tabindex="-1"><a class="header-anchor" href="#基本架构"><span>基本架构</span></a></h2>',10)]))}const s=e(p,[["render",i]]),b=JSON.parse('{"path":"/posts/interview/pay/arch/%E4%B8%AD%E9%97%B4%E4%BB%B6%EF%BC%9A4%20%E7%A7%8D%E4%B8%BB%E6%B5%81%20RPC%20%E6%A1%86%E6%9E%B6.html","title":"中间件：4 种主流 RPC 框架","lang":"zh-CN","frontmatter":{"title":"中间件：4 种主流 RPC 框架","pay":"https://articles.zsxq.com/id_cqttl9zesz2o.html","description":"中间件：4 种主流 RPC 框架 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 随着业务的繁荣发展，架构也在逐步升级衍化，从传统的单体系统慢慢发展为分布式系统。直观感觉就是系统的数量发生了巨大变化。 现在，每个子系统只负责一小块业务的落地规划，配备少量的研发深度建设。但是一个个的孤岛系统是无...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/pay/arch/%E4%B8%AD%E9%97%B4%E4%BB%B6%EF%BC%9A4%20%E7%A7%8D%E4%B8%BB%E6%B5%81%20RPC%20%E6%A1%86%E6%9E%B6.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"中间件：4 种主流 RPC 框架"}],["meta",{"property":"og:description","content":"中间件：4 种主流 RPC 框架 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 随着业务的繁荣发展，架构也在逐步升级衍化，从传统的单体系统慢慢发展为分布式系统。直观感觉就是系统的数量发生了巨大变化。 现在，每个子系统只负责一小块业务的落地规划，配备少量的研发深度建设。但是一个个的孤岛系统是无..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"中间件：4 种主流 RPC 框架\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":1.15,"words":346},"filePathRelative":"posts/interview/pay/arch/中间件：4 种主流 RPC 框架.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p>随着业务的繁荣发展，架构也在逐步升级衍化，从传统的单体系统慢慢发展为分布式系统。直观感觉就是系统的数量发生了巨大变化。</p>\\n<p>现在，每个子系统只负责一小块业务的落地规划，配备少量的研发深度建设。但是一个个的孤岛系统是无法对外服务的，只要通过一定的通讯机制把他们有效的串联起来，那才能释放出最大价值。</p>","autoDesc":true}');export{s as comp,b as data};
