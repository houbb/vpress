import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as r,o}from"./app-NomDibRt.js";const a="/vpress/images/pay/arch/25-1.png",i={};function n(h,t){return o(),p("div",null,t[0]||(t[0]=[r('<h1 id="稳定性-系统高可用的-11-个方案技巧" tabindex="-1"><a class="header-anchor" href="#稳定性-系统高可用的-11-个方案技巧"><span>稳定性：系统高可用的 11 个方案技巧</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p>大型互联网架构设计，讲究一个四件套 组合拳玩法，高并发 、高性能 、高可用 、高扩展 。</p><p>如果能掌握这四个方面，应付大厂面试以及日常工作中的架构方案设计基本不是什么难题。</p><p>今天，老马就带大家学习下高可用 都有哪些设计技巧？</p><div align="left"><img src="'+a+'" width="550px"></div><h2 id="一、系统拆分" tabindex="-1"><a class="header-anchor" href="#一、系统拆分"><span>一、系统拆分</span></a></h2><p>有句古话 &quot;牵一发而动全身&quot;。</p><p>面对一个庞然大物，如果没有一个合理的分工分层。任何一个小小失误都会被无限放大，酿成巨大灾难。</p><p>万物相通，回到我们的软件架构。</p><p>早前的系统都是单体系统，比如电商业务，会员、商品、订单、物流、营销等模块都堆积在一个系统。每到节假日搞个大促活动，系统扩容时，一扩全扩，一挂全挂。只要一个接口出了问题，整个系统都不可用。</p><p>“鸡蛋不能放在一个篮子里”，这种连带风险换谁都承受不起。</p><p>因此，系统拆分 成了更多人的选择。</p><p>慢慢的就有了我们现在看到的微服务 架构，将一个复杂的业务域按DDD的思想拆分成若干子系统，每个子系统负责专属的业务功能，做好垂直化建设，各个子系统之间做好边界隔离，降低风险蔓延。</p><h2 id="二、解耦" tabindex="-1"><a class="header-anchor" href="#二、解耦"><span>二、解耦</span></a></h2><p>软件开发有个重要原则“高内聚、低耦合”。</p><p>小到接口抽象 、MVC 分层 ，大到 SOLID 原则 、23种设计模式 。核心都是降低不同模块间的耦合度，避免一处错误改动影响到整个系统。</p><p>就以开闭原则 为例，对扩展是开放的，对修改是关闭的。随着业务功能迭代，如何做到每次改动不对原来的旧代码产生影响。</p><p>Spring 框架给我们提供了一个很好的思路，里面有个重要设计AOP ，全称（Aspect Oriented Programming），面向切面编程。</p><p>核心就是采用动态代理技术，通过对字节码进行增强，在方法调用的时候进行拦截，以便于在方法调用前后，增加我们需要的额外处理逻辑。<br> 当然还有一个重要思路就是事件机制 ，通过发布订阅模式 ，新增的需求，只需要订阅对应的事件通知 ，针对性消费即可。不会对原来的代码侵入性修改，是不是会好很多。</p>',20)]))}const b=e(i,[["render",n]]),m=JSON.parse('{"path":"/posts/interview/pay/arch/%E7%A8%B3%E5%AE%9A%E6%80%A7%EF%BC%9A%E7%B3%BB%E7%BB%9F%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%2011%20%E4%B8%AA%E6%96%B9%E6%A1%88%E6%8A%80%E5%B7%A7.html","title":"稳定性：系统高可用的 11 个方案技巧","lang":"zh-CN","frontmatter":{"title":"稳定性：系统高可用的 11 个方案技巧","pay":"https://articles.zsxq.com/id_r63rzuq8z1hc.html","description":"稳定性：系统高可用的 11 个方案技巧 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 大型互联网架构设计，讲究一个四件套 组合拳玩法，高并发 、高性能 、高可用 、高扩展 。 如果能掌握这四个方面，应付大厂面试以及日常工作中的架构方案设计基本不是什么难题。 今天，老马就带大家学习下高可用 都...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/pay/arch/%E7%A8%B3%E5%AE%9A%E6%80%A7%EF%BC%9A%E7%B3%BB%E7%BB%9F%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%2011%20%E4%B8%AA%E6%96%B9%E6%A1%88%E6%8A%80%E5%B7%A7.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"稳定性：系统高可用的 11 个方案技巧"}],["meta",{"property":"og:description","content":"稳定性：系统高可用的 11 个方案技巧 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 大型互联网架构设计，讲究一个四件套 组合拳玩法，高并发 、高性能 、高可用 、高扩展 。 如果能掌握这四个方面，应付大厂面试以及日常工作中的架构方案设计基本不是什么难题。 今天，老马就带大家学习下高可用 都..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"稳定性：系统高可用的 11 个方案技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":2.38,"words":715},"filePathRelative":"posts/interview/pay/arch/稳定性：系统高可用的 11 个方案技巧.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p>大型互联网架构设计，讲究一个四件套 组合拳玩法，高并发 、高性能 、高可用 、高扩展 。</p>\\n<p>如果能掌握这四个方面，应付大厂面试以及日常工作中的架构方案设计基本不是什么难题。</p>\\n<p>今天，老马就带大家学习下高可用 都有哪些设计技巧？</p>","autoDesc":true}');export{b as comp,m as data};
