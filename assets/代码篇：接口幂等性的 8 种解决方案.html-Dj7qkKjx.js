import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as r,o as i}from"./app-NomDibRt.js";const p="/vpress/images/pay/arch/19-1.png",a={};function n(h,t){return i(),o("div",null,t[0]||(t[0]=[r('<h1 id="代码篇-接口幂等性的-8-种解决方案" tabindex="-1"><a class="header-anchor" href="#代码篇-接口幂等性的-8-种解决方案"><span>代码篇：接口幂等性的 8 种解决方案</span></a></h1><blockquote><p>作者：老马<br><br>公众号：老马啸西风<br><br> 博客：<a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/</a><br><br> 人生理念：知行合一</p></blockquote><p>幂等是一个数学与计算机学概念。</p><ul><li>在数学中某一元运算为幂等时，其作用在任一元素多次后会和其作用一次的结果相同，用公式描述为 f(x) = f(f(x))。比如：绝对值函数</li><li>在计算机科学中，一次或者多次请求资源接口带来的结果是一样的。</li></ul><p>归纳起来就是一句话，访问结果跟请求的次数无关，也就是说你可以重试多次，不用担心有什么副作用。</p><h2 id="一、为什么需要幂等" tabindex="-1"><a class="header-anchor" href="#一、为什么需要幂等"><span>一、为什么需要幂等？</span></a></h2><p>我们先来看个示例</p><div align="left"><img src="'+p+'" width="450px"></div><p>用户在电商网站下了一笔交易订单，当付款的时候，支付系统由于某些原因并没有及时响应，此时订单系统并不知道是否已经支付成功？</p><p>此时就会比较尴尬，如果贸然引导用户再次支付，可能会出现扣款两次。</p><p>对于这种场景，我们可以考虑引入 幂等 解决方案，支付系统做好幂等控制，对于异常未知结果 ，上游系统可以按照一定的规则策略不断重试，直到成功。这样既可以保证支付成功，也不会多付钱。</p><p>那么具体如何处理呢？</p>',12)]))}const l=e(a,[["render",n]]),b=JSON.parse('{"path":"/posts/interview/pay/arch/%E4%BB%A3%E7%A0%81%E7%AF%87%EF%BC%9A%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%208%20%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"代码篇：接口幂等性的 8 种解决方案","lang":"zh-CN","frontmatter":{"title":"代码篇：接口幂等性的 8 种解决方案","pay":"https://articles.zsxq.com/id_0h4h9r6rgqhc.html","description":"代码篇：接口幂等性的 8 种解决方案 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 幂等是一个数学与计算机学概念。 在数学中某一元运算为幂等时，其作用在任一元素多次后会和其作用一次的结果相同，用公式描述为 f(x) = f(f(x))。比如：绝对值函数 在计算机科学中，一次或者多次请求资源接...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/vpress/posts/interview/pay/arch/%E4%BB%A3%E7%A0%81%E7%AF%87%EF%BC%9A%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%208%20%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"代码篇：接口幂等性的 8 种解决方案"}],["meta",{"property":"og:description","content":"代码篇：接口幂等性的 8 种解决方案 作者：老马 公众号：老马啸西风 博客：https://houbb.github.io/ 人生理念：知行合一 幂等是一个数学与计算机学概念。 在数学中某一元运算为幂等时，其作用在任一元素多次后会和其作用一次的结果相同，用公式描述为 f(x) = f(f(x))。比如：绝对值函数 在计算机科学中，一次或者多次请求资源接..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T09:38:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-30T09:38:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码篇：接口幂等性的 8 种解决方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T09:38:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1743327520000,"updatedTime":1743327520000,"contributors":[{"name":"houbb","username":"houbb","email":"houbinbin.echo@gmail.com","commits":1,"url":"https://github.com/houbb"}]},"readingTime":{"minutes":1.33,"words":399},"filePathRelative":"posts/interview/pay/arch/代码篇：接口幂等性的 8 种解决方案.md","localizedDate":"2025年3月30日","excerpt":"\\n<blockquote>\\n<p>作者：老马<br>\\n<br>公众号：老马啸西风<br>\\n<br> 博客：<a href=\\"https://houbb.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/</a><br>\\n<br> 人生理念：知行合一</p>\\n</blockquote>\\n<p>幂等是一个数学与计算机学概念。</p>\\n<ul>\\n<li>在数学中某一元运算为幂等时，其作用在任一元素多次后会和其作用一次的结果相同，用公式描述为 f(x) = f(f(x))。比如：绝对值函数</li>\\n<li>在计算机科学中，一次或者多次请求资源接口带来的结果是一样的。</li>\\n</ul>","autoDesc":true}');export{l as comp,b as data};
